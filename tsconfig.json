{
  "extends": "@vue/tsconfig/tsconfig.web.json",
  "include": ["env.d.ts", "src/**/*", "src/**/*.vue"],
  "compilerOptions": {
    "baseUrl": ".",
    "paths": {
      "@/*": ["./src/*"]
    }
  },

  "references": [
    {
      "path": "./tsconfig.config.json"
    }
  ]
}

/**
参数说明
文档：https://typescript.bootcss.com/compiler-options.html
*/

// importsNotUsedAsValues，通过它可以来控制没被使用的导入语句将会被如何处理，它提供来三个不同的选项。

// remove，这是现在的行为 —— 丢弃这些导入语句。这仍然是默认行为，没有破坏性的更改
// preserve，它将会保留所有的语句，即使是从来没有被使用。它可以保留副作用
// error，它将会保留所有的导入（与 preserve 选项相同）语句，但是当一个值的导入仅仅用于类型时将会抛出错误。如果你想确保没有意外导入任何值，这会是有用的，但是对于副作用，你仍然需要添加额外的导入语法。
